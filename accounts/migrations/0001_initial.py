# Generated by Django 5.2.1 on 2025-07-20 18:56

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='KYCProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('bvn', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('nin', models.CharField(blank=True, max_length=11, null=True, unique=True)),
                ('date_of_birth', models.DateField()),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('lga', models.CharField(blank=True, max_length=100, null=True)),
                ('area', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField()),
                ('telephone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('passport_photo', models.ImageField(upload_to='kyc/passport_photos/')),
                ('selfie', models.ImageField(upload_to='kyc/selfies/')),
                ('id_document', models.FileField(upload_to='kyc/ids/')),
                ('kyc_level', models.CharField(choices=[('tier_1', 'Tier 1'), ('tier_2', 'Tier 2'), ('tier_3', 'Tier 3')], default='tier_1', max_length=10, verbose_name='KYC Level')),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('last_upgrade_check', models.DateTimeField(blank=True, null=True)),
                ('upgrade_eligibility_score', models.IntegerField(default=0, help_text='Score based on user activity and compliance')),
                ('upgrade_requested', models.BooleanField(default=False, help_text='User has requested tier upgrade')),
                ('upgrade_request_date', models.DateTimeField(blank=True, null=True)),
                ('govt_id_type', models.CharField(blank=True, choices=[('national_id', 'National ID Card'), ('voters_card', "Voter's Card"), ('passport', 'International Passport'), ('drivers_license', "Driver's License")], max_length=20, null=True)),
                ('govt_id_document', models.FileField(blank=True, null=True, upload_to='kyc/govt_ids/')),
                ('proof_of_address', models.FileField(blank=True, null=True, upload_to='kyc/proof_of_address/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_kyc_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'KYC Profile',
                'verbose_name_plural': 'KYC Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('otp_code', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('user_created', 'User Created'), ('user_updated', 'User Updated'), ('user_deleted', 'User Deleted'), ('user_verified', 'User Verified'), ('user_suspended', 'User Suspended'), ('login_success', 'Login Success'), ('login_failed', 'Login Failed'), ('password_changed', 'Password Changed'), ('otp_sent', 'OTP Sent'), ('otp_verified', 'OTP Verified'), ('admin_action', 'Admin Action'), ('security_alert', 'Security Alert')], max_length=50)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='accounts_au_timesta_276167_idx'), models.Index(fields=['user', 'action'], name='accounts_au_user_id_96c97d_idx'), models.Index(fields=['severity'], name='accounts_au_severit_5f2320_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('alert_type', models.CharField(choices=[('suspicious_login', 'Suspicious Login'), ('multiple_failed_attempts', 'Multiple Failed Login Attempts'), ('unusual_activity', 'Unusual Activity'), ('system_breach', 'System Breach'), ('data_leak', 'Data Leak'), ('compliance_violation', 'Compliance Violation')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('open', 'Open'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='open', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('affected_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='accounts_se_timesta_94758c_idx'), models.Index(fields=['alert_type', 'severity'], name='accounts_se_alert_t_0a0ed6_idx'), models.Index(fields=['status'], name='accounts_se_status_c53c71_idx')],
            },
        ),
    ]
