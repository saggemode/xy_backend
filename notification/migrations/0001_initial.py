# Generated by Django 5.2.1 on 2025-07-20 18:56

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bank', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the notification', primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='The title of the notification', max_length=255, verbose_name='Title')),
                ('message', models.TextField(help_text='The main content of the notification', verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('new_order', 'New Order'), ('order_status_update', 'Order Status Update'), ('order_cancelled', 'Order Cancelled'), ('order_delivered', 'Order Delivered'), ('payment_success', 'Payment Successful'), ('payment_failed', 'Payment Failed'), ('password_reset', 'Password Reset'), ('email_verification', 'Email Verification'), ('promotion', 'Promotion'), ('flash_sale', 'Flash Sale'), ('new_message', 'New Message'), ('system_alert', 'System Alert'), ('wishlist_update', 'Wishlist Update'), ('review_reminder', 'Review Reminder'), ('stock_alert', 'Stock Alert'), ('price_drop', 'Price Drop'), ('shipping_update', 'Shipping Update'), ('refund_processed', 'Refund Processed'), ('account_update', 'Account Update'), ('security_alert', 'Security Alert'), ('other', 'Other'), ('sms', 'Sms'), ('email', 'Email'), ('push', 'Push'), ('bank_transaction', 'Bank Transaction'), ('bank_transfer', 'Bank Transfer'), ('bill_payment', 'Bill Payment'), ('wallet_credit', 'Wallet Credited'), ('wallet_debit', 'Wallet Debited')], db_index=True, default='other', help_text='The category of the notification', max_length=30, verbose_name='Notification Type')),
                ('level', models.CharField(choices=[('low', 'Low'), ('info', 'Info'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], db_index=True, default='info', help_text='The importance level of the notification', max_length=10, verbose_name='Level')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('failed', 'Failed')], default='pending', help_text='Current status of the notification', max_length=20, verbose_name='Status')),
                ('isRead', models.BooleanField(db_index=True, default=False, help_text='Whether the user has read the notification', verbose_name='Is Read')),
                ('read_at', models.DateTimeField(blank=True, help_text='Timestamp when the notification was read', null=True, verbose_name='Read At')),
                ('action_text', models.CharField(blank=True, help_text='Text for the action button', max_length=64, verbose_name='Action Text')),
                ('action_url', models.URLField(blank=True, help_text='URL for the action button', max_length=500, null=True, verbose_name='Action URL')),
                ('link', models.URLField(blank=True, help_text='An optional URL to direct the user to', max_length=500, null=True, verbose_name='Link')),
                ('priority', models.PositiveSmallIntegerField(db_index=True, default=0, help_text='Priority of the notification (higher = more important)', verbose_name='Priority')),
                ('source', models.CharField(blank=True, help_text='Source app or module that generated this notification', max_length=64, verbose_name='Source')),
                ('extra_data', models.JSONField(blank=True, help_text='Additional data for this notification (JSON format)', null=True, verbose_name='Extra Data')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Timestamp when the notification was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the notification was last updated', verbose_name='Updated At')),
                ('bank_transfer', models.ForeignKey(blank=True, help_text='The bank transfer associated with this notification, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='bank.banktransfer', verbose_name='Bank Transfer')),
                ('bill_payment', models.ForeignKey(blank=True, help_text='The bill payment associated with this notification, if applicable', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='bank.billpayment', verbose_name='Bill Payment')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'permissions': [('view_all_notifications', 'Can view all notifications'), ('manage_notifications', 'Can manage notifications')],
            },
        ),
    ]
